[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "mcpstack-mimic"
version = "0.1.0"
description = "MIMIC-IV MCPStack tool (standalone package) with pluggable SQLite/BigQuery backends."
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [{ name = "Provost Simon", email = "s.g.provost@kent.ac.uk" }]
keywords = ["mcp", "mcpstack", "mimic-iv", "tool", "healthcare", "bigquery", "sqlite"]
dependencies = [
  "typer>=0.9.0", # Typer as a core dependency for the CLI
  "rich>=13.0.0", # For Typer's rich output
  "requests>=2.30.0",
  "beautifulsoup4>=4.12.0",
  "polars[pyarrow]>=0.20.10",
  "appdirs>=1.4.0",
  "sqlalchemy>=2.0.0",
  "pandas>=2.0.0",
  "fastmcp>=0.1.0", # MCP server functionality
  "google-cloud-bigquery>=3.0.0", # BigQuery support
  "db-dtypes>=1.0.0", # BigQuery data types
  "sqlparse>=0.4.0", # SQL parsing for security validation
  "pyjwt[crypto]>=2.8.0", # JWT token handling with cryptography support
  "cryptography>=41.0.0", # Cryptographic operations for JWT
  "python-jose[cryptography]>=3.3.0", # Additional JWT support with crypto
  "httpx>=0.24.0", # Modern HTTP client for OAuth2 token validation
  "pyaml>=25.7.0",
  "beartype>=0.21.0",
  "thefuzz>=0.22.1",
  "rich-pyfiglet>=0.1.4",
  "click==8.1.8",
  "mcpstack",
]

[dependency-groups]
bigquery = ["google-cloud-bigquery>=3.25.0"]
dev = [
    "ruff>=0.4.0",
    "pre-commit>=3.0.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.10.0",
    "aiohttp>=3.8.0",
    "pytest-cov>=6.2.1",
]

# Let MCPStack discover external tools via entry points
[project.entry-points."mcpstack.tools"]
mimic = "mcpstack_mimic.tools.mimic.mimic:MIMIC"

[project.entry-points."mcpstack.tool_clis"]
mimic = "mcpstack_mimic.tools.mimic.cli:MimicCLI.get_app"

[tool.ruff]
line-length = 88
target-version = "py310"
src = ["src"]

[tool.ruff.lint]
select = ["E","W","F","I","UP","RUF","B","C4"]
ignore = ["E501"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.uv.sources]
mcpstack = { path = "../MCPStack" }
